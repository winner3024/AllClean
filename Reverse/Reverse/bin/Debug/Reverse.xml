<?xml version="1.0"?>
<doc>
<assembly>
<name>
Reverse
</name>
</assembly>
<members>
<member name="T:Reverse.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:Reverse.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:Reverse.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="M:Reverse.Cell.#ctor(Reverse.ReverseGrid,System.Drawing.Point)">
 <summary>論理位置を指定してセルを作成します。</summary>
 <param name="Grid">セルが属するグリッドを指定します。</param>
 <param name="Position">セルの論理位置を指定します。</param>
</member>
<member name="M:Reverse.Cell.Draw(System.Drawing.Graphics)">
 <summary>現在の状態を描画します。</summary>
 <param name="g">描画対象のGraphicsオブジェクトを指定します。</param>
</member>
<member name="M:Reverse.Cell.Focus">
 <summary>セルをアクティブにします。</summary>
 <remarks>アクティブなセルとはFocusedプロパティがTrueのセルです。
 このメソッドを呼び出すと同じ盤に属するその他のセルのFocusedプロパティをFalseにします。
 アクティブであることにそれ以上の効果はありませんが、
 描画の際にFocusedプロパティがTrueのセルに枠線を描画します。
 </remarks>
</member>
<member name="T:Reverse.CellStatus">
 <summary>セルの状態を表します。</summary>
</member>
<member name="T:Reverse.ScanDirection">
 <summary>方向を表します。</summary>
</member>
<member name="M:Reverse.Form1.PictureBox1_MousuMove(System.Object,System.Windows.Forms.MouseEventArgs)">
 <summary>マウスの移動に伴ってセルにアクティブを示す枠を描画する</summary>
</member>
<member name="M:Reverse.Form1.ChangeTurn">
 <summary>ターン交代</summary>
</member>
<member name="M:Reverse.Form1.Grid_PutNew(System.Object,System.EventArgs)">
 <summary>石を置いたときに発生するイベント</summary>
</member>
<member name="M:Reverse.Form1.Grid_Reversed(System.Object,System.EventArgs)">
 <summary>石がひっくり返されたときに発生するイベント</summary>
</member>
<member name="M:Reverse.Form1.Start(Reverse.CellStatus)">
 <summary>ゲームを開始します。</summary>
 <param name="PlayerColor">人間の石の色を指定します。</param>
 <remarks>黒が先手になります。</remarks>
</member>
<member name="M:Reverse.ReverseGrid.#ctor">
 <summary>全セルを初期化します。</summary>
</member>
<member name="M:Reverse.ReverseGrid.Draw(System.Drawing.Graphics)">
 <summary>現在の状態を描画します。</summary>
 <param name="g">描画対象のGraphicsオブジェクトを指定します。</param>
</member>
<member name="P:Reverse.ReverseGrid.Cells(System.Int32,System.Int32)">
 <summary>セルを取得します。</summary>
 <param name="X">セルの0から始まるX位置を指定します。Xの最大値はXCount-1です。</param>
 <param name="Y">セルの0から始まるY位置を指定します。Yの最大値はYCount-1です。</param>
 <returns>対象のセルを返します。</returns>
</member>
<member name="M:Reverse.ReverseGrid.CellFromPoint(System.Int32,System.Int32)">
 <summary>指定した座標にあるセルを取得します。</summary>
 <param name="X">X座標を指定します。</param>
 <param name="Y">Y座標を指定します。</param>
 <returns>座標(X, Y)にあるセルを返します。該当するセルがない場合にはNothingを返します。</returns>
</member>
<member name="M:Reverse.ReverseGrid.ReversibleCount(Reverse.CellStatus,System.Int32,System.Int32)">
 <summary>石をおいた場合にひっくり返せる石の数を調べます。</summary>
 <param name="Status">置こうとしている石の状態を指定します。</param>
 <param name="X">対象のセルの0から始まるX位置を指定します。Xの最大値はXCount-1です。</param>
 <param name="Y">対象のセルの0から始まるY位置を指定します。Yの最大値はYCount-1です。</param>
 <returns>石をおいた場合にひっくり返せる石の数を返します。</returns>
</member>
<member name="M:Reverse.ReverseGrid.ReversibleCount(Reverse.CellStatus,Reverse.ScanDirection,System.Int32,System.Int32)">
 <summary>石をおいた場合に特定の方向にひっくり返せる石の数を調べます。</summary>
 <param name="Status">置こうとしている石の状態を指定します。</param>
 <param name="Direction">ひっくり返す方向を指定します。</param>
 <param name="X">対象のセルの0から始まるX位置を指定します。Xの最大値はXCount-1です。</param>
 <param name="Y">対象のセルの0から始まるY位置を指定します。Yの最大値はYCount-1です。</param>
 <returns>石をおいた場合にひっくり返せる石の数を返します。</returns>
</member>
<member name="M:Reverse.ReverseGrid.CanPut(Reverse.CellStatus,System.Int32,System.Int32)">
 <summary>セルに石を置くことができるか調べます。</summary>
 <param name="Status">置こうとしている石の状態を指定します。</param>
 <param name="X">対象のセルの0から始まるX位置を指定します。Xの最大値はXCount-1です。</param>
 <param name="Y">対象のセルの0から始まるY位置を指定します。Yの最大値はYCount-1です。</param>
 <returns>セルに石が置ける場合はTrueを返します。</returns>
</member>
<member name="M:Reverse.ReverseGrid.Initialize">
 <summary>ゲームを最初の状態にします。</summary>
</member>
<member name="M:Reverse.ReverseGrid.Reverse(Reverse.CellStatus,Reverse.ScanDirection,System.Int32,System.Int32)">
 <summary>石をひっくり返します。</summary>
 <param name="Status">ひっくり返す原因となった石の色を指定します。</param>
 <param name="Direction">ひっくり返す方向を指定します。</param>
 <param name="X">対象のセルの0から始まるX位置を指定します。Xの最大値はXCount-1です。</param>
 <param name="Y">対象のセルの0から始まるY位置を指定します。Yの最大値はYCount-1です。</param>
</member>
<member name="M:Reverse.ReverseGrid.Put(Reverse.CellStatus,System.Int32,System.Int32)">
 <summary>セルに石を置きます。</summary>
 <param name="Status">置く石の状態を指定します。</param>
 <param name="X">対象のセルの0から始まるX位置を指定します。Xの最大値はXCount-1です。</param>
 <param name="Y">対象のセルの0から始まるY位置を指定します。Yの最大値はYCount-1です。</param>
 <returns>石を置いた場合Trueを返します。置けなかった場合Falseを返します。</returns>
 <remarks>このメソッドを呼び出すと周辺の石がひっくり返ります。</remarks>
</member>
<member name="P:Reverse.ReverseGrid.Count(Reverse.CellStatus)">
 <summary>状態を指定してセルの数を取得します。</summary>
 <param name="Status">数えるセルの状態を指定します。</param>
 <returns>Statusで指定した状態であるセルの数を返します。</returns>
</member>
<member name="M:Reverse.ReverseGrid.PuttableCount(Reverse.CellStatus)">
 <summary>置くことができる場所の数を調べます。</summary>
 <param name="Status">調べる石の色を指定します。</param>
 <returns>Statusで指定された色を置くことができる場所の数を返します。</returns>
</member>
<member name="M:Reverse.ReverseGrid.Copy">
 <summary>現在のReverseGridの状態をコピーして新しいReverseGridを作成します。</summary>
 <returns>新しいReverseGridを返します。</returns>
</member>
</members>
</doc>
